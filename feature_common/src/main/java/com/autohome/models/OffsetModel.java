// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: offset.proto

package com.autohome.models;

public final class OffsetModel {
  private OffsetModel() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface OffsetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Offset)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
     */
    int getTitleTermListCount();
    /**
     * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
     */
    boolean containsTitleTermList(
            String key);
    /**
     * Use {@link #getTitleTermListMap()} instead.
     */
    @Deprecated
    java.util.Map<String, Integer>
    getTitleTermList();
    /**
     * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
     */
    java.util.Map<String, Integer>
    getTitleTermListMap();
    /**
     * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
     */

    int getTitleTermListOrDefault(
            String key,
            int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
     */

    int getTitleTermListOrThrow(
            String key);

    /**
     * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
     */
    int getStitleTermListCount();
    /**
     * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
     */
    boolean containsStitleTermList(
            String key);
    /**
     * Use {@link #getStitleTermListMap()} instead.
     */
    @Deprecated
    java.util.Map<String, Integer>
    getStitleTermList();
    /**
     * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
     */
    java.util.Map<String, Integer>
    getStitleTermListMap();
    /**
     * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
     */

    int getStitleTermListOrDefault(
            String key,
            int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
     */

    int getStitleTermListOrThrow(
            String key);

    /**
     * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
     */
    int getAuthorTermListCount();
    /**
     * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
     */
    boolean containsAuthorTermList(
            String key);
    /**
     * Use {@link #getAuthorTermListMap()} instead.
     */
    @Deprecated
    java.util.Map<String, Integer>
    getAuthorTermList();
    /**
     * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
     */
    java.util.Map<String, Integer>
    getAuthorTermListMap();
    /**
     * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
     */

    int getAuthorTermListOrDefault(
            String key,
            int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
     */

    int getAuthorTermListOrThrow(
            String key);

    /**
     * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
     */
    int getContentTermListCount();
    /**
     * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
     */
    boolean containsContentTermList(
            String key);
    /**
     * Use {@link #getContentTermListMap()} instead.
     */
    @Deprecated
    java.util.Map<String, Integer>
    getContentTermList();
    /**
     * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
     */
    java.util.Map<String, Integer>
    getContentTermListMap();
    /**
     * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
     */

    int getContentTermListOrDefault(
            String key,
            int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
     */

    int getContentTermListOrThrow(
            String key);
  }
  /**
   * Protobuf type {@code Offset}
   */
  public  static final class Offset extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Offset)
      OffsetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Offset.newBuilder() to construct.
    private Offset(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Offset() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Offset(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                titleTermList_ = com.google.protobuf.MapField.newMapField(
                    TitleTermListDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<String, Integer>
              titleTermList__ = input.readMessage(
                  TitleTermListDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              titleTermList_.getMutableMap().put(
                  titleTermList__.getKey(), titleTermList__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                stitleTermList_ = com.google.protobuf.MapField.newMapField(
                    StitleTermListDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<String, Integer>
              stitleTermList__ = input.readMessage(
                  StitleTermListDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              stitleTermList_.getMutableMap().put(
                  stitleTermList__.getKey(), stitleTermList__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                authorTermList_ = com.google.protobuf.MapField.newMapField(
                    AuthorTermListDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<String, Integer>
              authorTermList__ = input.readMessage(
                  AuthorTermListDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              authorTermList_.getMutableMap().put(
                  authorTermList__.getKey(), authorTermList__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                contentTermList_ = com.google.protobuf.MapField.newMapField(
                    ContentTermListDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<String, Integer>
              contentTermList__ = input.readMessage(
                  ContentTermListDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              contentTermList_.getMutableMap().put(
                  contentTermList__.getKey(), contentTermList__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OffsetModel.internal_static_Offset_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetTitleTermList();
        case 2:
          return internalGetStitleTermList();
        case 3:
          return internalGetAuthorTermList();
        case 4:
          return internalGetContentTermList();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OffsetModel.internal_static_Offset_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Offset.class, Builder.class);
    }

    public static final int TITLETERMLIST_FIELD_NUMBER = 1;
    private static final class TitleTermListDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, Integer>newDefaultInstance(
                  OffsetModel.internal_static_Offset_TitleTermListEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        String, Integer> titleTermList_;
    private com.google.protobuf.MapField<String, Integer>
    internalGetTitleTermList() {
      if (titleTermList_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TitleTermListDefaultEntryHolder.defaultEntry);
      }
      return titleTermList_;
    }

    public int getTitleTermListCount() {
      return internalGetTitleTermList().getMap().size();
    }
    /**
     * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
     */

    public boolean containsTitleTermList(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetTitleTermList().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTitleTermListMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, Integer> getTitleTermList() {
      return getTitleTermListMap();
    }
    /**
     * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
     */

    public java.util.Map<String, Integer> getTitleTermListMap() {
      return internalGetTitleTermList().getMap();
    }
    /**
     * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
     */

    public int getTitleTermListOrDefault(
        String key,
        int defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          internalGetTitleTermList().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
     */

    public int getTitleTermListOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          internalGetTitleTermList().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STITLETERMLIST_FIELD_NUMBER = 2;
    private static final class StitleTermListDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, Integer>newDefaultInstance(
                  OffsetModel.internal_static_Offset_StitleTermListEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        String, Integer> stitleTermList_;
    private com.google.protobuf.MapField<String, Integer>
    internalGetStitleTermList() {
      if (stitleTermList_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StitleTermListDefaultEntryHolder.defaultEntry);
      }
      return stitleTermList_;
    }

    public int getStitleTermListCount() {
      return internalGetStitleTermList().getMap().size();
    }
    /**
     * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
     */

    public boolean containsStitleTermList(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetStitleTermList().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStitleTermListMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, Integer> getStitleTermList() {
      return getStitleTermListMap();
    }
    /**
     * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
     */

    public java.util.Map<String, Integer> getStitleTermListMap() {
      return internalGetStitleTermList().getMap();
    }
    /**
     * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
     */

    public int getStitleTermListOrDefault(
        String key,
        int defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          internalGetStitleTermList().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
     */

    public int getStitleTermListOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          internalGetStitleTermList().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int AUTHORTERMLIST_FIELD_NUMBER = 3;
    private static final class AuthorTermListDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, Integer>newDefaultInstance(
                  OffsetModel.internal_static_Offset_AuthorTermListEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        String, Integer> authorTermList_;
    private com.google.protobuf.MapField<String, Integer>
    internalGetAuthorTermList() {
      if (authorTermList_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AuthorTermListDefaultEntryHolder.defaultEntry);
      }
      return authorTermList_;
    }

    public int getAuthorTermListCount() {
      return internalGetAuthorTermList().getMap().size();
    }
    /**
     * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
     */

    public boolean containsAuthorTermList(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetAuthorTermList().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAuthorTermListMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, Integer> getAuthorTermList() {
      return getAuthorTermListMap();
    }
    /**
     * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
     */

    public java.util.Map<String, Integer> getAuthorTermListMap() {
      return internalGetAuthorTermList().getMap();
    }
    /**
     * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
     */

    public int getAuthorTermListOrDefault(
        String key,
        int defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          internalGetAuthorTermList().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
     */

    public int getAuthorTermListOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          internalGetAuthorTermList().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CONTENTTERMLIST_FIELD_NUMBER = 4;
    private static final class ContentTermListDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, Integer>newDefaultInstance(
                  OffsetModel.internal_static_Offset_ContentTermListEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        String, Integer> contentTermList_;
    private com.google.protobuf.MapField<String, Integer>
    internalGetContentTermList() {
      if (contentTermList_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ContentTermListDefaultEntryHolder.defaultEntry);
      }
      return contentTermList_;
    }

    public int getContentTermListCount() {
      return internalGetContentTermList().getMap().size();
    }
    /**
     * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
     */

    public boolean containsContentTermList(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetContentTermList().getMap().containsKey(key);
    }
    /**
     * Use {@link #getContentTermListMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, Integer> getContentTermList() {
      return getContentTermListMap();
    }
    /**
     * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
     */

    public java.util.Map<String, Integer> getContentTermListMap() {
      return internalGetContentTermList().getMap();
    }
    /**
     * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
     */

    public int getContentTermListOrDefault(
        String key,
        int defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          internalGetContentTermList().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
     */

    public int getContentTermListOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          internalGetContentTermList().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetTitleTermList(),
          TitleTermListDefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetStitleTermList(),
          StitleTermListDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetAuthorTermList(),
          AuthorTermListDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetContentTermList(),
          ContentTermListDefaultEntryHolder.defaultEntry,
          4);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<String, Integer> entry
           : internalGetTitleTermList().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, Integer>
        titleTermList__ = TitleTermListDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, titleTermList__);
      }
      for (java.util.Map.Entry<String, Integer> entry
           : internalGetStitleTermList().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, Integer>
        stitleTermList__ = StitleTermListDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, stitleTermList__);
      }
      for (java.util.Map.Entry<String, Integer> entry
           : internalGetAuthorTermList().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, Integer>
        authorTermList__ = AuthorTermListDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, authorTermList__);
      }
      for (java.util.Map.Entry<String, Integer> entry
           : internalGetContentTermList().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, Integer>
        contentTermList__ = ContentTermListDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, contentTermList__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Offset)) {
        return super.equals(obj);
      }
      Offset other = (Offset) obj;

      boolean result = true;
      result = result && internalGetTitleTermList().equals(
          other.internalGetTitleTermList());
      result = result && internalGetStitleTermList().equals(
          other.internalGetStitleTermList());
      result = result && internalGetAuthorTermList().equals(
          other.internalGetAuthorTermList());
      result = result && internalGetContentTermList().equals(
          other.internalGetContentTermList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetTitleTermList().getMap().isEmpty()) {
        hash = (37 * hash) + TITLETERMLIST_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTitleTermList().hashCode();
      }
      if (!internalGetStitleTermList().getMap().isEmpty()) {
        hash = (37 * hash) + STITLETERMLIST_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStitleTermList().hashCode();
      }
      if (!internalGetAuthorTermList().getMap().isEmpty()) {
        hash = (37 * hash) + AUTHORTERMLIST_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAuthorTermList().hashCode();
      }
      if (!internalGetContentTermList().getMap().isEmpty()) {
        hash = (37 * hash) + CONTENTTERMLIST_FIELD_NUMBER;
        hash = (53 * hash) + internalGetContentTermList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Offset parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Offset parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Offset parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Offset parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Offset parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Offset parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Offset parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Offset parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Offset parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Offset parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Offset parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Offset parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Offset prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Offset}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Offset)
        OffsetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OffsetModel.internal_static_Offset_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetTitleTermList();
          case 2:
            return internalGetStitleTermList();
          case 3:
            return internalGetAuthorTermList();
          case 4:
            return internalGetContentTermList();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableTitleTermList();
          case 2:
            return internalGetMutableStitleTermList();
          case 3:
            return internalGetMutableAuthorTermList();
          case 4:
            return internalGetMutableContentTermList();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OffsetModel.internal_static_Offset_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Offset.class, Builder.class);
      }

      // Construct using com.autohome.model.OffsetModel.Offset.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableTitleTermList().clear();
        internalGetMutableStitleTermList().clear();
        internalGetMutableAuthorTermList().clear();
        internalGetMutableContentTermList().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OffsetModel.internal_static_Offset_descriptor;
      }

      public Offset getDefaultInstanceForType() {
        return Offset.getDefaultInstance();
      }

      public Offset build() {
        Offset result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Offset buildPartial() {
        Offset result = new Offset(this);
        int from_bitField0_ = bitField0_;
        result.titleTermList_ = internalGetTitleTermList();
        result.titleTermList_.makeImmutable();
        result.stitleTermList_ = internalGetStitleTermList();
        result.stitleTermList_.makeImmutable();
        result.authorTermList_ = internalGetAuthorTermList();
        result.authorTermList_.makeImmutable();
        result.contentTermList_ = internalGetContentTermList();
        result.contentTermList_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Offset) {
          return mergeFrom((Offset)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Offset other) {
        if (other == Offset.getDefaultInstance()) return this;
        internalGetMutableTitleTermList().mergeFrom(
            other.internalGetTitleTermList());
        internalGetMutableStitleTermList().mergeFrom(
            other.internalGetStitleTermList());
        internalGetMutableAuthorTermList().mergeFrom(
            other.internalGetAuthorTermList());
        internalGetMutableContentTermList().mergeFrom(
            other.internalGetContentTermList());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Offset parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Offset) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          String, Integer> titleTermList_;
      private com.google.protobuf.MapField<String, Integer>
      internalGetTitleTermList() {
        if (titleTermList_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TitleTermListDefaultEntryHolder.defaultEntry);
        }
        return titleTermList_;
      }
      private com.google.protobuf.MapField<String, Integer>
      internalGetMutableTitleTermList() {
        onChanged();;
        if (titleTermList_ == null) {
          titleTermList_ = com.google.protobuf.MapField.newMapField(
              TitleTermListDefaultEntryHolder.defaultEntry);
        }
        if (!titleTermList_.isMutable()) {
          titleTermList_ = titleTermList_.copy();
        }
        return titleTermList_;
      }

      public int getTitleTermListCount() {
        return internalGetTitleTermList().getMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
       */

      public boolean containsTitleTermList(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetTitleTermList().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTitleTermListMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, Integer> getTitleTermList() {
        return getTitleTermListMap();
      }
      /**
       * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
       */

      public java.util.Map<String, Integer> getTitleTermListMap() {
        return internalGetTitleTermList().getMap();
      }
      /**
       * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
       */

      public int getTitleTermListOrDefault(
          String key,
          int defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Integer> map =
            internalGetTitleTermList().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
       */

      public int getTitleTermListOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Integer> map =
            internalGetTitleTermList().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTitleTermList() {
        internalGetMutableTitleTermList().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
       */

      public Builder removeTitleTermList(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableTitleTermList().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, Integer>
      getMutableTitleTermList() {
        return internalGetMutableTitleTermList().getMutableMap();
      }
      /**
       * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
       */
      public Builder putTitleTermList(
          String key,
          int value) {
        if (key == null) { throw new NullPointerException(); }
        
        internalGetMutableTitleTermList().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; titleTermList = 1;</code>
       */

      public Builder putAllTitleTermList(
          java.util.Map<String, Integer> values) {
        internalGetMutableTitleTermList().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          String, Integer> stitleTermList_;
      private com.google.protobuf.MapField<String, Integer>
      internalGetStitleTermList() {
        if (stitleTermList_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StitleTermListDefaultEntryHolder.defaultEntry);
        }
        return stitleTermList_;
      }
      private com.google.protobuf.MapField<String, Integer>
      internalGetMutableStitleTermList() {
        onChanged();;
        if (stitleTermList_ == null) {
          stitleTermList_ = com.google.protobuf.MapField.newMapField(
              StitleTermListDefaultEntryHolder.defaultEntry);
        }
        if (!stitleTermList_.isMutable()) {
          stitleTermList_ = stitleTermList_.copy();
        }
        return stitleTermList_;
      }

      public int getStitleTermListCount() {
        return internalGetStitleTermList().getMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
       */

      public boolean containsStitleTermList(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetStitleTermList().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStitleTermListMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, Integer> getStitleTermList() {
        return getStitleTermListMap();
      }
      /**
       * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
       */

      public java.util.Map<String, Integer> getStitleTermListMap() {
        return internalGetStitleTermList().getMap();
      }
      /**
       * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
       */

      public int getStitleTermListOrDefault(
          String key,
          int defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Integer> map =
            internalGetStitleTermList().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
       */

      public int getStitleTermListOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Integer> map =
            internalGetStitleTermList().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStitleTermList() {
        internalGetMutableStitleTermList().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
       */

      public Builder removeStitleTermList(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableStitleTermList().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, Integer>
      getMutableStitleTermList() {
        return internalGetMutableStitleTermList().getMutableMap();
      }
      /**
       * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
       */
      public Builder putStitleTermList(
          String key,
          int value) {
        if (key == null) { throw new NullPointerException(); }
        
        internalGetMutableStitleTermList().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; stitleTermList = 2;</code>
       */

      public Builder putAllStitleTermList(
          java.util.Map<String, Integer> values) {
        internalGetMutableStitleTermList().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          String, Integer> authorTermList_;
      private com.google.protobuf.MapField<String, Integer>
      internalGetAuthorTermList() {
        if (authorTermList_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AuthorTermListDefaultEntryHolder.defaultEntry);
        }
        return authorTermList_;
      }
      private com.google.protobuf.MapField<String, Integer>
      internalGetMutableAuthorTermList() {
        onChanged();;
        if (authorTermList_ == null) {
          authorTermList_ = com.google.protobuf.MapField.newMapField(
              AuthorTermListDefaultEntryHolder.defaultEntry);
        }
        if (!authorTermList_.isMutable()) {
          authorTermList_ = authorTermList_.copy();
        }
        return authorTermList_;
      }

      public int getAuthorTermListCount() {
        return internalGetAuthorTermList().getMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
       */

      public boolean containsAuthorTermList(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetAuthorTermList().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAuthorTermListMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, Integer> getAuthorTermList() {
        return getAuthorTermListMap();
      }
      /**
       * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
       */

      public java.util.Map<String, Integer> getAuthorTermListMap() {
        return internalGetAuthorTermList().getMap();
      }
      /**
       * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
       */

      public int getAuthorTermListOrDefault(
          String key,
          int defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Integer> map =
            internalGetAuthorTermList().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
       */

      public int getAuthorTermListOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Integer> map =
            internalGetAuthorTermList().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAuthorTermList() {
        internalGetMutableAuthorTermList().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
       */

      public Builder removeAuthorTermList(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableAuthorTermList().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, Integer>
      getMutableAuthorTermList() {
        return internalGetMutableAuthorTermList().getMutableMap();
      }
      /**
       * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
       */
      public Builder putAuthorTermList(
          String key,
          int value) {
        if (key == null) { throw new NullPointerException(); }
        
        internalGetMutableAuthorTermList().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; authorTermList = 3;</code>
       */

      public Builder putAllAuthorTermList(
          java.util.Map<String, Integer> values) {
        internalGetMutableAuthorTermList().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          String, Integer> contentTermList_;
      private com.google.protobuf.MapField<String, Integer>
      internalGetContentTermList() {
        if (contentTermList_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ContentTermListDefaultEntryHolder.defaultEntry);
        }
        return contentTermList_;
      }
      private com.google.protobuf.MapField<String, Integer>
      internalGetMutableContentTermList() {
        onChanged();;
        if (contentTermList_ == null) {
          contentTermList_ = com.google.protobuf.MapField.newMapField(
              ContentTermListDefaultEntryHolder.defaultEntry);
        }
        if (!contentTermList_.isMutable()) {
          contentTermList_ = contentTermList_.copy();
        }
        return contentTermList_;
      }

      public int getContentTermListCount() {
        return internalGetContentTermList().getMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
       */

      public boolean containsContentTermList(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetContentTermList().getMap().containsKey(key);
      }
      /**
       * Use {@link #getContentTermListMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, Integer> getContentTermList() {
        return getContentTermListMap();
      }
      /**
       * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
       */

      public java.util.Map<String, Integer> getContentTermListMap() {
        return internalGetContentTermList().getMap();
      }
      /**
       * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
       */

      public int getContentTermListOrDefault(
          String key,
          int defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Integer> map =
            internalGetContentTermList().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
       */

      public int getContentTermListOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Integer> map =
            internalGetContentTermList().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearContentTermList() {
        internalGetMutableContentTermList().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
       */

      public Builder removeContentTermList(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableContentTermList().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, Integer>
      getMutableContentTermList() {
        return internalGetMutableContentTermList().getMutableMap();
      }
      /**
       * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
       */
      public Builder putContentTermList(
          String key,
          int value) {
        if (key == null) { throw new NullPointerException(); }
        
        internalGetMutableContentTermList().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; contentTermList = 4;</code>
       */

      public Builder putAllContentTermList(
          java.util.Map<String, Integer> values) {
        internalGetMutableContentTermList().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Offset)
    }

    // @@protoc_insertion_point(class_scope:Offset)
    private static final Offset DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Offset();
    }

    public static Offset getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Offset>
        PARSER = new com.google.protobuf.AbstractParser<Offset>() {
      public Offset parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Offset(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Offset> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Offset> getParserForType() {
      return PARSER;
    }

    public Offset getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Offset_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Offset_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Offset_TitleTermListEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Offset_TitleTermListEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Offset_StitleTermListEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Offset_StitleTermListEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Offset_AuthorTermListEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Offset_AuthorTermListEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Offset_ContentTermListEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Offset_ContentTermListEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\014offset.proto\"\270\003\n\006Offset\0221\n\rtitleTermLi" +
      "st\030\001 \003(\0132\032.Offset.TitleTermListEntry\0223\n\016" +
      "stitleTermList\030\002 \003(\0132\033.Offset.StitleTerm" +
      "ListEntry\0223\n\016authorTermList\030\003 \003(\0132\033.Offs" +
      "et.AuthorTermListEntry\0225\n\017contentTermLis" +
      "t\030\004 \003(\0132\034.Offset.ContentTermListEntry\0324\n" +
      "\022TitleTermListEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu" +
      "e\030\002 \001(\005:\0028\001\0325\n\023StitleTermListEntry\022\013\n\003ke" +
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\0325\n\023AuthorTerm" +
      "ListEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028" +
      "\001\0326\n\024ContentTermListEntry\022\013\n\003key\030\001 \001(\t\022\r" +
      "\n\005value\030\002 \001(\005:\0028\001B!\n\022com.autohome.modelB" +
      "\013OffsetModelb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Offset_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Offset_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Offset_descriptor,
        new String[] { "TitleTermList", "StitleTermList", "AuthorTermList", "ContentTermList", });
    internal_static_Offset_TitleTermListEntry_descriptor =
      internal_static_Offset_descriptor.getNestedTypes().get(0);
    internal_static_Offset_TitleTermListEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Offset_TitleTermListEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_Offset_StitleTermListEntry_descriptor =
      internal_static_Offset_descriptor.getNestedTypes().get(1);
    internal_static_Offset_StitleTermListEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Offset_StitleTermListEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_Offset_AuthorTermListEntry_descriptor =
      internal_static_Offset_descriptor.getNestedTypes().get(2);
    internal_static_Offset_AuthorTermListEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Offset_AuthorTermListEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_Offset_ContentTermListEntry_descriptor =
      internal_static_Offset_descriptor.getNestedTypes().get(3);
    internal_static_Offset_ContentTermListEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Offset_ContentTermListEntry_descriptor,
        new String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
